// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3397.UnamedRobot.subsystems;



import org.usfirst.frc3397.UnamedRobot.OI;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.command.Subsystem;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class Intake {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private VictorSP rightIntake;
    private VictorSP leftIntake;
    private VictorSP intakeLift;
    private DigitalInput liftBackStop;
    OI controlScheme = new OI(0, 1);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Intake() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        rightIntake = new VictorSP(6);
        leftIntake = new VictorSP(7);
        intakeLift = new VictorSP(4);
        liftBackStop = new DigitalInput(0);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
    public void IntakeLift() {
        if (controlScheme.getIntakeArmUp() || controlScheme.getY()){
            intakeLift.set(0.4);
        } else if (controlScheme.getIntakeArmDown() || controlScheme.getA()){
            intakeLift.set(-0.3);
        } else {
            intakeLift.set(0);
        }
        
        
    }
    public void runIntake(){
        leftIntake.setSpeed(-controlScheme.getLeftTrigger());
        rightIntake.setSpeed(-controlScheme.getLeftTrigger());
        leftIntake.setSpeed(controlScheme.getRightTrigger());
        rightIntake.setSpeed(controlScheme.getRightTrigger());
    }
    public void runInIntake(double speed){
        leftIntake.setSpeed(-speed);
        rightIntake.setSpeed(speed);
    }
    public void runOutIntake(double speed){
        leftIntake.setSpeed(speed);
        rightIntake.setSpeed(-speed);
    }
    public void stopIntake(){
        leftIntake.setSpeed(0);
        rightIntake.setSpeed(0);
    }
    public void liftIntake(double speed){
        intakeLift.setSpeed(speed);
    }
    public void stopliftIntake(){
        intakeLift.setSpeed(0);
    }
    public void lowerIntake(double speed){
        intakeLift.setSpeed(speed);
    }

    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

