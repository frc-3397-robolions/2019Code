// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3397.UnamedRobot;


import edu.wpi.first.wpilibj.GenericHID.Hand;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.XboxController;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public XboxController driveStick;
    public Joystick operatorStick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI(int drivePort, int operatePort) {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        operatorStick = new Joystick(operatePort);
        
        driveStick = new XboxController(drivePort);
        


        // SmartDashboard Buttons

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
    public double getForward() {
		return driveStick.getY(Hand.kLeft);
	}
	
	public double getStrafe() {
		return driveStick.getX(Hand.kLeft);
	}
	
	public double getTurn() {
		return driveStick.getX(Hand.kRight);
    }
    public boolean pushHatch() {
        return operatorStick.getRawButton(3);
    }
    public boolean pullHatch() {
        return operatorStick.getRawButton(Constants.FightStickY);
    }
    public double getRightTrigger() {
		return driveStick.getTriggerAxis(Hand.kRight);
	}
	
	public double getLeftTrigger() {
		return driveStick.getTriggerAxis(Hand.kLeft);
    }
    public boolean getIntakeArmDown() {
        return operatorStick.getRawButton(5);
    }
    public boolean getIntakeArmUp() {
        return operatorStick.getRawButton(6);
    }
    public boolean getHatchArmDown() {
        return operatorStick.getRawAxis(2) > 0.0;
    }
    public boolean getHatchArmUp() {
        return operatorStick.getRawAxis(3) > 0.0;
    }
    public boolean getX() {
		return driveStick.getXButton();
	}
	
	public boolean getB() {
		return driveStick.getBButton();
	}
	public boolean getY() {
		return driveStick.getYButton();
	}
	public boolean getA() {
		return driveStick.getAButton();
    }
    public boolean switchFrontNBack() {
        return driveStick.getRawButton(6);
    }
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public XboxController getDriveStick() {
        return driveStick;
    }

    public Joystick getOperatorStick() {
        return operatorStick;
    }

    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

